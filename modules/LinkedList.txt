LinkedList - это представитель однонаправленого списка?QQQ-QQQLinkedList - это двухсвязный список, хранит ссылку на предыдущий и следующий элементы.
!!!!!
LinkedList реализует интерфейсы Deque<E>?QQQ+QQQДа, Deque<E> пришел в java c 6 версии и LinkedList начал его реализовывать.
!!!!!
Итератор поддерживает обход в обе стороны?QQQ+QQQИтератор поддерживает обход в обе стороны.
!!!!!
Mожно перебрать элементы linkedList в обратном порядке не используя get(index)?QQQ+QQQс помощью метода descendingIterator().
!!!!!
LinkedList может содержать повторяющиеся элементы?QQQ+QQQможет содержать дубликаты, т.к. является реализацией List.
!!!!!
В LinkedList DEFAULT_CAPACITY = 11 элементов?QQQ-QQQВ LinkedList нет DEFAULT_CAPACITY.
!!!!!
В LinkedList время поиска элемента линейно пропорционально количеству элементов?QQQ+QQQДа = O(n).
!!!!!
Добавление элемента в конец LinkedList c помощью методов addValue(v) addLast(v) будет выполнено за O(n)?QQQ-QQQ addValue(v) и addLast(v) - за O(1). А при добавлении элемента в отсортированый список или add(index, v) - за O(n).
!!!!!
Выделяется один элемент в памяти при вызове linkedList.add()?QQQ+QQQДа, создается 1 экземпляр вложеного класса - Node.
!!!!!
Будет ли NullPointerException при добавлении null в LinkedList?QQQ-QQQМы можем добавлять null.
!!!!!
В LinkedList элемент удаляется за счет того, что перебрасываются ccылки и на него никто не ссылается?QQQ+QQQДа, ссылки на эл. удаляются методом unlink(), а соседние перебрасываются. На эл. никто не ссылается и GC его удалит.
!!!!!
